apiVersion: v1
kind: ConfigMap
metadata:
  name: myconf
data:
  app-name: test-conf-app
  app-version: 1.0.0


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    server {
        listen       80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }


        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
      containers:
      - name: myapp
        image: busybox
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        args:
          - "sleep"
          - "infinity"
          - "&&"
          - "env"
        env:
          - name: APP_NAME
            valueFrom:
              configMapKeyRef:
                name: myconf
                key: app-name
          - name: APP_VERSION
            valueFrom:
              configMapKeyRef:
                name: myconf
                key: app-version
        # Mounting a configmap into a container
        # all the values of the cm will be rep-
        # resented as files in the mount
        volumeMounts:
          - mountPath: /nginx
            name: nginx-conf

# once applied, use the following
# command to chech the logs of the
# pod
# kubectl logs [pod-name]


